package Ejercicio1;

import java.time.LocalDate;
import java.time.Period;

/**
 * La clase Jugador representa un jugador con sus detalles personales, como nombre,
 * apellidos, fecha de nacimiento, fecha de inscripción y correo electrónico.
 * Proporciona métodos para calcular la antigüedad del jugador desde su inscripción.
 */
public class Jugador {
    private String nombre;
    private String apellidos;
    private LocalDate fechaNacimiento;
    private LocalDate fechaInscripcion;
    private String email;

    /**
     * Constructor vacío que inicializa la fecha de inscripción con la fecha actual.
     */
    public Jugador() {
        this.fechaInscripcion = LocalDate.now();
    }

    /**
     * Constructor parametrizado que inicializa los atributos del jugador.
     *
     * @param nombre           El nombre del jugador.
     * @param apellidos        Los apellidos del jugador.
     * @param fechaNacimiento  La fecha de nacimiento del jugador.
     * @param email            El correo electrónico del jugador.
     */
    public Jugador(String nombre, String apellidos, LocalDate fechaNacimiento, String email) {
        this.nombre = nombre;
        this.apellidos = apellidos;
        this.fechaNacimiento = fechaNacimiento;
        this.fechaInscripcion = LocalDate.now();  // Fecha de inscripción es la fecha actual
        this.email = email;
    }

    /**
     * Obtiene el nombre del jugador.
     *
     * @return El nombre del jugador.
     */
    public String getNombre() {
        return nombre;
    }

    /**
     * Establece el nombre del jugador.
     *
     * @param nombre El nombre del jugador.
     */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    /**
     * Obtiene los apellidos del jugador.
     *
     * @return Los apellidos del jugador.
     */
    public String getApellidos() {
        return apellidos;
    }

    /**
     * Establece los apellidos del jugador.
     *
     * @param apellidos Los apellidos del jugador.
     */
    public void setApellidos(String apellidos) {
        this.apellidos = apellidos;
    }

    /**
     * Obtiene la fecha de nacimiento del jugador.
     *
     * @return La fecha de nacimiento del jugador.
     */
    public LocalDate getFechaNacimiento() {
        return fechaNacimiento;
    }

    /**
     * Establece la fecha de nacimiento del jugador.
     *
     * @param fechaNacimiento La fecha de nacimiento del jugador.
     */
    public void setFechaNacimiento(LocalDate fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    /**
     * Obtiene la fecha de inscripción del jugador.
     *
     * @return La fecha de inscripción del jugador.
     */
    public LocalDate getFechaInscripcion() {
        return fechaInscripcion;
    }

    /**
     * Establece la fecha de inscripción del jugador.
     *
     * @param fechaInscripcion La fecha de inscripción del jugador.
     */
    public void setFechaInscripcion(LocalDate fechaInscripcion) {
        this.fechaInscripcion = fechaInscripcion;
    }

    /**
     * Obtiene el correo electrónico del jugador.
     *
     * @return El correo electrónico del jugador.
     */
    public String getEmail() {
        return email;
    }

    /**
     * Establece el correo electrónico del jugador.
     *
     * @param email El correo electrónico del jugador.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Devuelve una representación en formato String de los datos del jugador.
     *
     * @return Una cadena con el nombre, apellidos, fecha de nacimiento, 
     *         fecha de inscripción y correo electrónico del jugador.
     */
    @Override
    public String toString() {
        return "Nombre: " + nombre +
               "  Apellidos: " + apellidos +
               "  Fecha de nacimiento: " + fechaNacimiento +
               "  Fecha de inscripción: " + fechaInscripcion +
               "  Correo electrónico: " + email;
    }

    /**
     * Calcula la antigüedad del jugador desde la fecha de inscripción.
     *
     * @return La cantidad de años que el jugador ha estado registrado.
     */
    public int calcularAntiguedad() {
        LocalDate fechaActual = LocalDate.now();
        return Period.between(this.fechaInscripcion, fechaActual).getYears();
    }

    /**
     * Imprime la antigüedad del jugador en la consola, indicando cuántos años
     * ha estado registrado el jugador.
     */
    public void imprimirAntiguedad() {
        int antiguedad = calcularAntiguedad();
        System.out.println("El usuario " + this.nombre + " " + this.apellidos +
                " lleva registrado " + antiguedad + " años.");
    }
}
